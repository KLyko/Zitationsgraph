Text encoding and ontology—
enlarging an ontology by
semi-automatic generated instances
............................................................................................................................................................
Ame´lie Zo¨llner-Weber
The Wittgenstein Archives (WAB), University of Bergen, Norway
.......................................................................................................................................
Abstract
The challenge in literary computing is (1) to model texts, to produce digital
editions and (2) to model the meaning of literary phenomena which readers
have in their mind when reading a text. Recently, an approach was proposed
to describe and present structure and attributes of literary characters (i.e. the
mental representation in a reader’s mind), to explore, and to compare different
representations using an ontology. In order to expand the ontology for literary
characters, users must manually extract information about characters from liter-
ary texts and, again manually, add them to the ontology. In this contribution,
I present an application that supports users when working with ontologies in
literary studies. Therefore, semi-automatic suggestions for including information
in an ontology are generated. The challenge of my approach is to encode aspects
of literary characters in a text and to fit it automatically to the ontology of literary
characters. The application has been tested by using an extract of the novel
‘Melmoth the Wanderer’ (1820), written by Charles Robert Maturin. For the
main character, Melmoth, 72 instances were generated and assigned successfully
to the ontology. In conclusion, I think that this approach is not limited to the
theme of character descriptions; it can also be adapted to other topics in literary
computing and Digital Humanities.
.................................................................................................................................................................................
1 Introduction
The challenge in literary computing is (1) to model
texts, to produce digital editions (Meister, 2003;
Jannidis et al., 2006) and (2) to model the meaning
of literary phenomena which readers have in their
mind when reading a text. However, since text
structures and mental representations often differ
from each other, it is difficult to model them in
the same way. In addition, interpretations depend
on the cultural and social background of individual
readers. It is, therefore, a challenge to create a model
of these interpretations which will enable the devel-
opment of descriptions, e.g. of literary characters
so that these characters can be compared.
For this problem, an ontology can be used. Only
a few ontologies in literature studies exist. One
such ontology, proposed by Lawrence et al., covers
narrative elements like events in literature
(Lawrence and Schraefel, 2005). Zo¨llner-Weber
(2007) uses an ontology to model mental represen-
tations in order to realize descriptions of literary
characters. There, the character is regarded as a
complex cognitive entity in the reader’s mind.
When using the ontology, readers can describe
their own mental representations of literary charac-
ters in computer processable form. The goal of this
approach is (1) to describe and represent the struc-
ture and attributes of literary characters, i.e. the
mental representation in the reader’s mind, (2) to
Correspondence:
Ame´lie Zo¨llner-Weber,
The Wittgenstein Archives
(WAB), Department of
Philosophy, University of
Bergen, Sydnesplassen 12,
Pb 7805, N-5020 Bergen,
Norway
E-mail:
amelie.zoellnerweber@
gmail.com
Literary and Linguistic Computing, Vol. 26, No. 3, 2011.  The Author 2011. Published by Oxford University Press on
behalf of ALLC. All rights reserved. For Permissions, please email: journals.permissions@oup.com
365
doi:10.1093/llc/fqr021 Advance Access published on 16 May 2011
 at U
B Leipzig on January 11, 2012
http://llc.oxfordjournals.org/
D
ow
nloaded from
 
explore, and (3) to compare these different
representations.
In order to expand the ontology for literary char-
acters, users must manually extract information
about characters from literary texts and, again
manually, add them to the ontology (Fig. 1).
The contribution will present an application that
will support users when they are working with
ontologies within literary studies. A tool has been
developed which takes the user’s mark-up of a text
and generates semi-automatic suggestions of in-
stances to be added to the ontology. It is intended
for users who are more familiar with text encoding
than ontologies, and who are interested in topics
of literary studies, especially literary characters.
By combining an application of text encoding
with the ontology, the problem of manual manipu-
lation of the ontology should be reduced. There
have already been some approaches, e.g. HyTex
(Lu¨ngen and Storrer, 2007), dealing with texts,
text encoding, and a knowledge base. However the
challenge of the approach presented here is (1) to
encode aspects of literary characters found in a
text—which often have to be interpreted by the
reader and (2) to match these automatically with
the ontology for literary characters.
2 Methods
For the description of literary characters, an ontol-
ogy that models characters by their mental repre-
sentation was used (Zo¨llner-Weber, 2006).
An ontology is a model especially developed to
provide organisation and retrieval of information
semantically. There are two comprehensions of the
term of ‘ontology’: the pure formalistic approach of
classifying objects as in the field of Artificial
Intelligence (AI) and machine learning, and the
more transcendental approach in the humanities
and especially philosophy (Zo¨llner-Weber, 2009).
In the following, the AI definition of ontology is
used.
Several theories of literary characters are com-
bined to create a basic description, e.g. features, ac-
tions, and speech performed by literary characters,
Fig. 1 Extract of the client-server system. Here, users can manipulate the ontology, e.g. enlarging it by including
information; yet, this has to be done manually
A. Zo¨llner-Weber
366 Literary and Linguistic Computing, Vol. 26, No. 3, 2011
 at U
B Leipzig on January 11, 2012
http://llc.oxfordjournals.org/
D
ow
nloaded from
 
using an OWL ontology (Nieragden, 1995;
Grigoris and van Harmelen, 2003; Jannidis 2004).
The main assumption of this approach is based on
the theories of mental representations of characters
proposed by Jannidis (2004) and Schneider (2000).
The reader’s representations of characters are com-
plex, cognitive processes which are guided by liter-
ary texts; however, their mental structures do not
often correspond with the texts.
I chose an ontology because its structure fits well
with the mostly hierarchical structures of theories
proposed to describe or analyse literary characters
(Lotman, 1977; Jannidis, 2004). In general, an
ontology is a hierarchy of ‘classes’. The classes, in
turn, contain instances that represent ‘individuals’.
‘Properties’, which contain additional information,
are attached to the individuals (Noy and
McGuinness, 2001). By using this kind of structure,
information is formally described.
The framework of the mental representations
is modelled by the main classes of the ontology,
e.g. inner and outer features, actions on other char-
acters and objects. The sub classes contain charac-
teristics of special characters (special features of
single characters or special characteristics of
groups of characters). I decided to include single
pieces of information that are taken from literary
texts which are then entered as instances of the
ontology. Instances of the classes represent direct
information about a character given in a text.
Properties contain additional information, e.g.
type of narrator, author, annotation information,
or reference to literature. Through the information
provided by the class hierarchy, the instances and
their properties, a mental representation of a char-
acter is modelled (cf. Fig. 2). Additionally, each
instance is linked to a text part or text parts where
the information is built upon. In this approach,
individual description, which is a preparatory
step for interpretation, is focussed upon. The
main description categories secure a general
classification making it possible to compare two dif-
ferent interpretations of one character, even when
they are spread over different categories of the
ontology.
In order to fill the aforementioned ontology of
literary characters in a more automated fashion,
an encoding scheme has been developed. For the an-
notation, I compiled a TEI-DTD (Text Encoding
Initiative 2003, http://www.tei-c.org/) using the
TEI-DTD Roma server (http://www.tei-c.org/
Roma/) consisting of the prose, the drama, the
verse, and the analysis module. Elements of this
encoding scheme were then utilized and rearranged
so that it became viable for literary studies. This
means that the usage of elements was enlarged by
adding single, already existing TEI attributes to
these elements. By using this special mark-up, a
user can directly add interpretive pieces of informa-
tion about a literary character to a text. Here, the
annotation scheme is based on four main categories,
‘description’, ‘statement’, ‘action’, and ‘speech’,
which classify pieces of information. All descriptions
about a character that are stated by a narrator are
subsumed under ‘description’. The category ‘state-
ment’ depicts commentaries by a character about
another character. To mark non-verbal and verbal
actions of a character, the categories ‘action’ and
‘speech’ should be used. In addition, a user should
add, example, information about the type of narra-
tor, the name of a character, and depending on the
chosen category, additional information to com-
plete the annotation. After the process of encoding,
Fig. 2 The structure of the ontology for literary charac-
ters: the main classes form the general structure of char-
acters, whereas the subclasses contain special features.
An instance represents a single piece of information
about a character that is obtained from a literary text.
Properties contain additional information, e.g. about
narrative techniques
Text encoding and ontology
Literary and Linguistic Computing, Vol. 26, No. 3, 2011 367
 at U
B Leipzig on January 11, 2012
http://llc.oxfordjournals.org/
D
ow
nloaded from
 
a user sends the marked texts via a web form to a
server where the annotations are evaluated by
an in-house developed programming algorithm
(cf. Fig. 4). The algorithm tries to sort the encoded
information about the character based on the
four categories. The value of the attribute ‘ana’ is
matched to the categories which also reflect the
main classes of the ontology, and, thereby, the
encoded information is assigned to the major classes
of the ontology. If further encoded information
is given by the mark up, the algorithm tries to
generate a further subclassification. This is repeated
until all available encodings are processed. Figure 3
depicts an example of this process. After successful
processing, a user is presented with a list for all
processed annotations that can form instances.
Additionally, for all of these suggestions, a class
assignment is also given.
In addition, the user is supported by an extracted
list of surrounding classes of the ontology so that (s)
he is able to inspect the environment of the new
instance and its class. If a new instance requires
a new class that does not yet exist, a user can also
add a new class. Afterwards, (s) he can assign the
instance to the new class.
3 Results
The application has been tested by using an extract
from the novel ‘Melmoth the Wanderer’ (1820),
written by Charles Robert Maturin. This novel was
part of a larger study and comparison of evil and
devil characters. Briefly, the literary task was to in-
vestigate how these characters differ between au-
thors and how they developed over time. A more
detailed outline of the findings of this study is given
in Zo¨llner-Weber (2008).
I encoded the text with the mentioned TEI
scheme and afterwards, by using the programming
algorithm, I obtained suggestions for new instances.
In Fig. 4, the process of generating an instance from
a text passage is shown as an example. For the main
character, Melmoth, seventy-two instances were
generated and assigned to the ontology.
4 Discussion and Conclusion
In this contribution, a system has been presented
which semi-automatically inserts information into
the ontology for literary characters using a TEI
encoding. Using this application, it is possible to
add information about a single character to the
ontology, as well as simultaneously process annota-
tions for several characters. Time and work can be
saved, as the whole text can be annotated at once
and then transferred to the ontology. There is no
need to go back and forth between text and ontol-
ogy as one would have to do for a purely manual
insertion of character information into the ontol-
ogy. In addition, the suggested tags can be used not
only for the purpose of the proposed ontology, but
also for linguistic or other aims within literature
studies.
Working with the client-server system of the
ontology, it was observed that literary scholars had
problems to capture the aspects of an ontology in
general. But they did not have problems to detect
text parts where information about a character is
given and they could formulate and categorize this
information. Text encoding is rather close to
the working process of detecting and describing
aspects; however, the complexity of the underlying
Fig. 3 Scheme of decision algorithm for adding instances
to the classes of the ontology. The different nodes of the
tree reflect the tags used in the encoding scheme, the
leaves of the tree marked in bold depict possible matching
classes; here the most right one (‘act_on_oneself’) will be
the final assignment
A. Zo¨llner-Weber
368 Literary and Linguistic Computing, Vol. 26, No. 3, 2011
 at U
B Leipzig on January 11, 2012
http://llc.oxfordjournals.org/
D
ow
nloaded from
 
ontology model seems to block this ‘intuitive’
process.
Therefore, using this approach, a user does not
have to focus on technical details of the ontology
and (s) he can concentrate on the literary aspects
and their encoding or description. Furthermore, the
result page of this application always presents the
surrounding environment of a single suggestion,
the instance, e.g. possible sibling classes and parent
or neighbour classes (cf. Fig. 4). If a user is unsure,
where to assign the instance, (s) he can inspect and
compare descriptions of other users in the
client-server-system.
Recently, several approaches to link encodings
in TEI to ontologies were proposed. A mapping
system from TEI to the CIDOC–CRM ontology,
an ontology developed to describe cultural heritage
information (CIDOC, 2003), has been provided
by TEI Ontologies Special Interest Group (Ore
and Eide, 2009). In comparison to the CIDOC–
CRM system, suggestions for instances in the
presented approach are generated from (a more
linguistic) encoding rather than by mapping tags
that appear in both, text and ontology. Another
approach uses an ontology to represent the
domain of the fine rolls of Henry III (Ciula et al.,
2008). Information taken from TEI documents were
transposed by XSLT into the ontology. Additionally,
ontologies and their applications are often linked
to logic reasoning. However, incorporating such
techniques into the present application might be
difficult especially for untrained users, as shown
elsewhere (Zo¨llner-Weber, 2009).
Therefore, I think that it is important to relate
texts, encodings, and ontologies to each other so
that the same information, which appears in these
Fig. 4 The process of generating an instance for the ontology from an encoded text: (a) original part of the text,
(b) encoded text, and (c) derived instance with the class assignment
Text encoding and ontology
Literary and Linguistic Computing, Vol. 26, No. 3, 2011 369
 at U
B Leipzig on January 11, 2012
http://llc.oxfordjournals.org/
D
ow
nloaded from
 
different resources, can be linked. This encourages
users, who are familiar with encodings but not
necessarily familiar with an ontology or logic rea-
soning, to add new information to an ontology
without going too deeply into details. This approach
is not limited to the theme of character descriptions;
it can also be adapted to other topics in literary
computing and Digital Humanities.