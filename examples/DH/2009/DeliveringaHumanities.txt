Delivering a Humanities 
Computing Module at 
Undergraduate Level: A Case 
Study 
John G. Keating
National University of Ireland
john.keating@nuim.ie
Aja Teehan
National University of Ireland 
aja.teehan@nuim.ie
Thomas Byrne 
National University of Ireland
thomas.l.byrne@nuim.ie	
1  Introduction 
In September 2008 we commenced delivery of a Hu-manities Computing module at undergraduate level to 
twenty seven students of the National University of Ire-
land, Maynooth (NUIM). The module was offered by the 
Computer Science Department and operated and deliv-
ered by An Foras Feasa and was designed and delivered, 
pedagogically, as an authentic learning experience [1]. 
This paper gives an overview of the aims of the mod-
ule, the curriculum, the module as signment and student 
support, assessment, and the process for evaluating the 
module. We also provide details on the continuous as-
sessment project based on the creation of a repository 
holding a collection of digitised 19th and 20th century 
religious pamphlets. 
2  Humanities Computing Module 
A key aim of the module is to foster in the students some 
understanding of humanities problems, to recognise how 
and when a solution could be found us ing Computer Sci-
ence	Software	Engineering	(CSSE)	methods,	and	finally,	
how to apply CSSE methodologies and technologies 
to	 create	 solutions.	Having	 re	searched	 the	King’s	Col-
lege	 London	 (KCL)	Humanities	 Computing	 final	 year	
project [2] offered by the Centre for Computing in the 
Humanities (CCH), we decided that an emphasis should 
be placed on the general application of CSSE principles 
rather	than	specific	tools,	which	can	date	quickly.	Figure	
1 provides the for the module description as it appeared 
in	the	NUIM’s	Book	of	Modules.	
The module was delivered over 12 two-hour lectures, 
supplemented by 12 two-hour labs. The student was ex-
pected to perform and additional 32 hours of indepen-
dent study. The lectures provided the theoretical frame-
work for, and overview of the issues associated with, 
humanities computing. The labs were considered to be 
of paramount importance and a strong emphasis was 
placed on the delivery of a digital artefact by the end of 
the semester. 
The	module	has	two	primary	learning	objectives:	firstly,	
the students would know how to design and create a digi-
tal artefact to solve a humanities problem, and, secondly, 
they	would	hold	 informed	opinions	 as	 to	why	 specific	
technologies and methodologies were chosen. In this 
way one can see that the methodologies of the two main 
disciplines (Humanities and CSSE) were used as the 
framework	for	the	students’	evaluation	and	critique.	
3  Module Assignment and Student Support 
We applied a pedagogical approach known as authentic 
learning in the design of the module; this approach “al-
lows students to explore, discuss, and meaningfully con-
struct concepts and relationships in contexts that involve 
real-world problems and projects that are relevant to the 
learner” [1]. The continuous assessment assignment was 
chosen because it represented a typical real-world, hu-
manities researcher, problem. The form of the continu-
ous assessment assignment would mean that the students 
would have to engage, in a real-world sense, with the 
assigned problem. 
The continuous assessment assignment was based upon 
creating a digital arte fact derived from 19th and 20th 
century pamphlets produced by the Catholic Church in 
Ireland. The assignment was to be completed within the 
laboratory and independent study times. Each two-hour 
lab session was presided over by a demonstrator who 
was available to answer queries in relation to the work. 
While the lecturers would provide guidance, instruction 
and information in relation to the practical project, it 
was also expected that the students would use outside 
re sources to research and implement their system. The 
assignment was formalised as in Figure 2. 
It was also decided that the course assignment would 
be conducted by teams of students. Team work is of-
ten required in industry thus this learning experience, 
beneficial	in	itself,	would	aid	the	team-members	in	their	
career. Team work is also a necessity in most software 
engineering projects as they generally require diverse 
and wide-ranging expertise unlikely to be found in one 
individual. Each team had at least one student whose 
home discipline was Computer Science and Software 
Engineering (CSSE). 
DIGITAL HUMANITIES 2009
Page 168
It was considered important to provide the students 
with an understanding of the technology most used by 
the Humanities Computing community, therefore, TEI 
(Text Encoding Initiative) was selected as the encod-
ing language rather than XML (Extensible Mark-up 
Language). However, of the time spent in lectures on 
encoding, roughly half of that was devoted to XML in 
order to provide both context for TEI and a basic work-
ing knowledge of encoding. The students were expected 
to evaluate the use of TEI as the encoding language in 
their project presentation and in their written assessment. 
The humanities contextualisation derived from the need 
to understand the prob lem domain of the User. Early 
lectures provided an overview of the course con tent, ex-
pectations of the students, examination system, etc. The 
remainder of the lectures covered the module content as 
described above. The authentic learning experience was 
supported in the lectures by inviting the post-doctoral 
fellow as a guest speaker. This allowed for the framing 
of the humanities problem (mining 19th and 20th cen-
tury pamphlets for icons and related text) for the stu-
dents. The course team believed that the students would 
be motivated to create the digital artefact knowing that 
its value would be evidenced in the real-world; the stu-
dents would “be able to realize that their achievements 
stretched beyond the walls of the classroom” [3]. 
4  Assessment 
The balance between doing and evaluating	was	reflected	
in the marking scheme of the module; 50% of the marks 
were available for continuous assessment deriving from 
the lab-supervised production of the digital artefact. The 
remaining 50% came from a written examination at the 
end of the semester. 
The written examination was open book and consisted 
of three questions.  The students chose two to com-
plete.		Each	question	had	three	sections:	the	first	section	
required basic knowledge of some topic in humanities 
computing, the second section required the implementa-
tion of a solution to a given problem within that topic, 
and the third section required evaluation and critique 
of the chosen technology and methodology.  In order 
to pass the assessment a student had to display at least 
an understanding of the topic and some form of critical 
thinking or solution generation.
The authentic learning approach taken in the design of 
the	module	equates	to	the	KCL	final	year	project	model	
in	many	respects.	However,	the	evaluation	of	the	finished	
digital product only formed part of the team presenta-
tion, which accounted for 5% of the overall marks, or 
10% of the continuous assessment marks. It was during 
this presentation that students also had the opportunity to 
display the internalisation of the issues surrounding hu-
manities computing and their acqui sition of the associ-
ated language register. This assessment was particularly 
suited to evaluating how successful the authentic learn-
ing approach had been. 
However, the authentic learning approach also dictated 
that the assessment should be based on real-world con-
cerns. In computer science, the delivery of a functional 
digital product, before the deadline and to an acceptable 
standard is the fundamental requirement. While KCL 
stresses that the project can still be a success even if the 
technological aspect was a failure, we stressed that the 
technological	 fulfillment	 of	 criteria	was	 of	 critical	 im-
portance. Failure to deliver a digital artefact, for any 
reason and no matter how well evaluated, would have 
resulted in failure in the continuous assessment, thereby 
making it diffcult for the students to pass the module. 
The evaluation of the humanities issues and related tech-
nologies was to be mainly expressed in the written ex-
amination, which equated to 50% of the marks. In this 
way we sought to balance the module, just as KCL bal-
anced	their	final	project.	
5  Evaluation 
Evaluation of the module, which will be available in ad-
vance of the DH2009 con ference, will be undertaken in 
two ways. Firstly, a post-doctoral research fellow will 
actually use the repository. Their opinion on how suc-
cessful	the	repository	is	in	fulfilling	their	needs	will	be	
highly	 valued.	 The	 students’	 understanding	 of	 the	 hu-
manities and computer science issues discussed during 
the lectures will also be displayed in their written exami-
nations. We are optimistic about their success in relation 
to the creation of the repository as already we have seen 
evi dence of external research and the use of previously 
unfamiliar software tools to create considered Project 
Plans and Use Cases. Secondly, a detailed survey of the 
students will be undertaken where the students will be 
asked to critique the module. 
6  Conclusion 
Designing the module using an authentic learning ap-
proach has provided the students with the opportunity 
to learn very important life skills in relation to team 
work, deadlines, scarcity of resources and independent 
research. This has been balanced by providing the stu-
dents with a theoretical and methodological framework 
so that an understanding of the problems in the humani-
ties	 domain	 that	 can	 benefit	 from	 computing	 has	 been	
fostered. It is hoped that this mod ule will help, within 
DIGITAL HUMANITIES 2009
Page  169
the university, to foster a greater understanding of, and 
appreciation for, humanities computing. 
References 
1. Suzanne M. Donovan, John D. Bransford, J.W. Pel-
legrino, ed.: How People Learn: Bridging Research 
and Practice. National Academy Press, Washington DC 
(1999) 
2.	 Jessop,	M.:	Teaching,	 learning	 and	 research	 in	final	
year humanities computing student projects. Literary 
and Linguistic Computing 20 (2005) 295–311 
3. Mims, C.: Authentic learning: A practical introduction 
& guide for implementation. Meridian 6 (2003) 1–3 
C2260 HUMANITIES COMPUTING 1
24 Lecture hours, 24 Laboratory hours, 32 Tutorial and 
Independent Study hours. Lectures, Tutorials and Laboratories 
will be delivered by An Foras Feasa staff.
ECTS Credits: 5.0 
Learning Outcomes: To understand and become familiar with 
technology for the humanities. To examine how computing tools 
and techniques may be integrated into humanities and what the 
effects of this integration might be. Students will learn how to use 
technology to inform new humanities research as well as how it 
may be used to support existing research patterns;
possibilities created by the application of technology to 
humanities research can be explored and exploited. Students will 
learn how to apply a wide variety of computing and software 
engineering techniques in four distinct areas: text processing, 
image processing, software engineering and digital
humanities. How to assess whether computing can be usefully 
applied in particular circumstances, and what results may be 
expected.
Content: Fundamentals of the Digital Humanities: humanities 
research, electronic communications and publishing, text analysis, 
numerical and graphical analysis and presentation. Introduction to 
web-based databases. Analysing text: electronic tools to analyse 
written and transcribed text. What can be learned about a text 
from using simple analytical techniques? Using graphical analysis 
to	find	and	understand	patterns	in	data.	Creating	and	using	graphs	
and charts to summarise, visualise and analyse data. The nature of 
images and how to convert them to digital form: from manuscript, 
through image capture and XML, to online database. Digital 
images; commonly used
operations and techniques for image enhancement. Digitisation 
and the creation of online digital resources. Introduction to TEI 
(Text Encoding Initiative), XML (Extensible Markup Language) 
and associated tools. Assessment: Total Marks: 100%. Two-hour 
written examination at the end of Semester 1, not less than 50%. 
Continuous Assessment up to 50%
CS260: HUMANITIES COMPUTING 1 
Laboratory Project 
John Keating, Aja Teehan, An Foras Feasa
You	are	required,	as	part	of	a	four	or	five	person	team,	to	build	
an on-line repository of 18th and 19th century pamphlets. The 
repository will include both image and fulltext encoding of the 
pamphlet. The text encoding standard used will be TEI (Text En-
coding Initiative), a comprehensive text encoding methodology. 
You will be provided with a collection of preservation-quality im-
ages for several related pamphlets. These provided images must 
be encoded using TEI. Furthermore, each team is expected to use 
the	imaging	facilities	in	An	Foras	Feasa’s	laboratory	to	capture	at	
least two additional pamphlets (approximately 2 hrs. of imaging 
per team).
The team is expected to produce an on-line user interface 
to access the digital images and associated text. The team 
should implement interaction facilities for at least two Use 
Cases (for example, “search the repository for occurrences 
of keywords”, or “implement linkages between pamphlets”).  
Full-text and image TEI encoding (35%)
Project will be graded on 5 deliverables:
1. Production of the on-line repository, including User Inter-
face (35%)
2. The	team’s	preservation-quality	image	collection	(5%)
3. Project presentation by the team (15 minutes) (10%)
4. Full project documentation (15%)
Key dates for deliverables:
•	 Project plan submitted by 10th October (formative assess-
ment)
•	 Use Cases diagrams/documentation submitted by the 24th 
October (formative assessment)
•	 Encodings submitted by 14th of November (formative as-
sessment)
•	 Project presentation on the 15th and 16th of December 
(summative assessment)
•	 Project documentation submitted by 19th of December 
(summative assessment)
Figure 1. CS260 Module Description
Figure 2.  Continuous Assessment Assignment
Figure 3. Marking Scheme for CS260 Module
DIGITAL HUMANITIES 2009
Page 170
